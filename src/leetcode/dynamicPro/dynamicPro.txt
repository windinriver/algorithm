利用各阶段之间的关系，逐个求解，最终求得全局最优解


//动态规划
//    1.确认原问题与子问题
//    2. 确认状态（一维还是二维）,dp[i] 代表什么， dp[i][j] 代表什么
//    3 确认状态边界  不需要递推的值
//    4 确认递推方程


动态规划类型
    数组dp: 一维还是二维
    背包dp
    字符串dp
    树形dp

反向思维
内部条件转换为状态